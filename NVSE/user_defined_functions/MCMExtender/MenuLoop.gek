int iMenu
int iSubmenu
int iOption
int iMouseOver
int iTemp
int iStateUpdate
ref rTemp
array_var aJSON
array_var aTemp
string_var sJSONPath
string_var sTemp
string_var sTranslate

Begin Function {}

	if eval GetUIFloatAlt "StartMenu/MCM/_Menu" != 1
		if eval GetUIFloatAlt "StartMenu/_MCMExt+Open" == 1
			SetUIFloatAlt "StartMenu/_MCMExt+Open" 0
			DispatchEventAlt "MCMExtMenuState" "" (-1)
			EK 1
			EK 15
			EK (Goo1.AuxVarGetFlt "*MCMExt_Keys" 0)
		endif
		return
	elseif eval GetUIFloatAlt "StartMenu/_MCMExt+Open" == 0
		SetUIFloatAlt "StartMenu/_MCMExt+Open" 1
		DK 1
		DK 15
		iTemp = GetControl 26
		Goo1.AuxVarSetFlt "*MCMExt_Keys" iTemp 0
		DK iTemp
	endif

	; Duplicate MCMList fix
	aTemp = GetListForms MCMMods
	if eval (ar_Size aTemp) != (ar_Size (ar_Unique aTemp))
		aTemp = ar_Unique aTemp
		ListClear MCMMods
		ListAddArray MCMMods aTemp
		MCMModList.iModCount = ListGetCount MCMMods
		SetMCMFloat 5 0 "_count" (MCMModList.iModCount)
		aTemp = Ar_Null
	endif

	; String list controller selection fix
	if eval GetUIFloatAlt "StartMenu/MCM/_ShowList" == 3 && GetUIFloatAlt "StartMenu/MCM/_AltInput" == 1 && MCMList.iTarget < 1
		MCMList.iTarget = 1
		SetMCMFloat 0 0 "_TargetList" 1
	endif

	; Controller swap fix
	rTemp = Goo1.AuxVarGetRef "*MCMExt_Refs" 0
	if eval GetUIFloatAlt "StartMenu/MCM/_AltInput" != GetVariable "iAltInput" rTemp
		SetVariable "iAltInput" (GetUIFloatAlt "StartMenu/MCM/_AltInput") rTemp
	endif

	; Keybind selection
	if eval GetUIFloatAlt "StartMenu/MCM/MCM_PressControl/visible" == 1
		; Exit search
		if eval GetUIFloatAlt "StartMenu\_MCMExt+Search" == 1
			SetUIFloatAlt "StartMenu\_MCMExt+Search" 2
		endif
		; Select quick load
		if eval IsKeyPressed (Goo1.AuxVarGetFlt "*MCMExt_Keys") 2
			SetMCMFloat 0 0 "MCM_PressControl/visible" 0
			SetMCMFloat 0 0 "MCM_BG/MCM_PressControl/BG/visible" 0
			SetMCMFloat 1 0 "_selected" 0
			SetMCMFloat 0 0 "_NewValue" 1
			SetMCMFloat 0 0 "_Value" (Goo1.AuxVarGetFlt "*MCMExt_Keys")
		endif
	endif

	; Is JSON menu selected
	if eval GetUIFloatAlt "StartMenu/MCM/_ActiveMod" != 255
		; Reset JSON menu
		if eval Goo1.AuxVarGetFlt "*MCMExt_State" 0 == 1
			SetMCMFloatMass 1 1 30 "MCMExtImage/visible" 0
			Goo1.AuxVarSetFlt "*MCMExt_State" 0 0
			SetUIFloat "StartMenu/_MCMExt+Menu" 0
			DispatchEventAlt "MCMExtMenuState" "" 0
		endif
		return
	elseif eval Goo1.AuxVarGetFlt "*MCMExt_State" 0 == 0
		; Init JSON
		Goo1.AuxVarSetFlt "*MCMExt_State" 1 0
		iTemp = 1
		iStateUpdate = 1
		SetUIFloat "StartMenu/_MCMExt+Menu" 1
	endif

	; Update active menu
	if eval (iMenu = GetUIFloatAlt "StartMenu/MCM/_ActiveMenu") != (Goo1.AuxVarGetFlt "*MCMExt_State" 1)
		Goo1.AuxVarSetFlt "*MCMExt_State" iMenu 1
		iTemp = 1
	endif

	; Init JSON Menu
	if eval iTemp == 1

		; Load JSON to memory
		sJSONPath = Goo1.AuxVarGetStr "*MCMExt_JSON" (Goo1.AuxVarGetFlt "*MCMExt_State" 1)

		aJSON = ReadFromJSON (sJSONPath) "" 0 1
		Goo1.AuxVarSetStr "*MCMExt_JSONCache" (sJSONPath) -1

		; Cache savefile
		Goo1.AuxVarSetStr "*MCMExt_State" (sJSONPath) 3
		Goo1.AuxVarSetStr "*MCMExt_State" (aJSON["modName"]) 4
		Goo1.AuxVarSetStr "*MCMExt_State" (aJSON["saveFile"]) 5

		; Update translations
		AuxStringMapDestroy "*MCMExt_Translations"
		aTemp = GetINISection "Translations" ("../MCM/Translations/" + (aJSON["modName"]) + ".ini")
		AuxStringMapSetFromArr "*MCMExt_Translations" aTemp

		; Build submenus
		if eval (Ar_Size (aJSON["submenus"])) > 1 && (GetUIFloat "StartMenu/MCM/*:5/SubMenu1/_enable") == 0
			Call (CompileScript "MCMExtender\RefreshSubmenus.gek") 0 0 0 0 aJSON
		endif

		;PrintC "MCM Enhanced: Init Menu -> %z" (aJSON["modName"])

	endif

	; ===== RESET =====
	; Updates the actual menu
	if eval (GetUIFloat "StartMenu/MCM/_Reset") == 1
		iStateUpdate = 1
		Call (CompileScript "MCMExtender\MenuReset.gek")
	endif

	; Dispatch menu switch event
	if eval iStateUpdate
		DispatchEventAlt "MCMExtMenuState" (Goo1.AuxVarGetStr "*MCMExt_State" 4) (GetUIFloat "StartMenu/MCM/_ActiveSubMenu")
	endif

	; ===== DEFAULT =====
	; Stent: Runs when the "Defaults" button is pressed in the MCM menu
	if GetUIFloat "StartMenu/MCM/_Default"
		Call (CompileScript "MCMExtender\MenuDefault.gek")
	endif

	; ===== NEW VALUE =====
	; Stent: Runs after setting any option
	if GetUIFloat "StartMenu/MCM/_NewValue"
		Call (CompileScript "MCMExtender\MenuNew.gek")
	endif

	; ===== SHOW LIST =====
	; Stent: Runs a string list option is selected
	if eval (GetUIFloat "StartMenu/MCM/_ShowList") == 1
		Call (CompileScript "MCMExtender\MenuShowList.gek")
	endif

	; ===== SHOW SCALE =====
	; Stent: Runs a scale option is selected
	; Eg. Int, Float, RBG, Multi Value. Type: 2, 2.5, 8, 9
	if eval (GetUIFloat "StartMenu/MCM/_ShowScale") == 1
		Call (CompileScript "MCMExtender\MenuShowScale.gek")
	endif

	; ===== DEFAULT SCALE =====
	; Stent: Runs when the "Default" button is pressed in scale slider menu
	; Eg. Int, Float, RBG, Multi Value. Type: 2, 2.5, 8, 9
	if GetUIFloat "StartMenu/MCM/_DefaultScale"
		Call (CompileScript "MCMExtender\MenuDefaultScale.gek")
	endif

	; Sets option mouseover text
	if eval (iMouseOver = GetUIFloat "StartMenu/MCM/*:1/_optionID")
		SetUIFloat "StartMenu/MCM/MCM_Info/visible" 1
		if eval Goo1.AuxVarGetFlt "*MCMExt_State" 2 != iMouseOver
			Goo1.AuxVarSetFlt "*MCMExt_State" iMouseOver 2
			aJSON = ReadFromJSON (Goo1.AuxVarGetStr "*MCMExt_State" 3) "" 0 1
			if eval Ar_HasKey (aJSON["submenus"][$(GetUIFloat "StartMenu/MCM/_ActiveSubMenu")]["options"][$iMouseOver]) "mouse"
				sTemp = aJSON["submenus"][$(GetUIFloat "StartMenu/MCM/_ActiveSubMenu")]["options"][$iMouseOver]["mouse"]
				if eval sTemp[0] == "$" && (sTranslate = AuxStringMapGetStr "*MCMExt_Translations" (sTemp)) != ""
					sTemp = sTranslate
				endif
				SetUIStringEx "StartMenu/MCM/*:9/string" (sTemp)
			endif
		endif
	else
		Goo1.AuxVarSetFlt "*MCMExt_State" -1 2
		SetUIFloat "StartMenu/MCM/MCM_Info/visible" 0
	endif

	; HSV Color Picker Support
	if eval (GetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/visible") == 1 && (GetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/_UserInput") == 1
		MCMScale.fVTemp1 = GetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/_Red"
		MCMScale.fVTemp2 = GetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/_Green"
		MCMScale.fVTemp3 = GetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/_Blue"
	endif

	; Run scale menu callLoop
	if eval Goo1.AuxVarType "*MCMExt_callLoop" 0 == 1
		if eval GetUIFloat "StartMenu/MCM/_ShowScale" == 3

			iSubmenu = GetUIFloat "StartMenu/MCM/_ActiveSubMenu"
			iOption = GetUIFloat "StartMenu/MCM/_ActiveOption"

			iTemp = GetUIFloat "StartMenu/MCM/*:2/_scales"
			aTemp = ar_Construct "array"
			ar_Append aTemp MCMScale.fVTemp1
			if eval iTemp > 1
				ar_Append aTemp MCMScale.fVTemp2
			endif
			if eval iTemp > 2
				ar_Append aTemp MCMScale.fVTemp3
			endif

			iTemp = Goo1.AuxVarGetFlt "*MCMExt_callLoop" 0
			sTemp = Goo1.AuxVarGetStr "*MCMExt_callLoop" 1
			if eval iTemp == 0
				if TestExpr (rTemp = EditorIDToFormID (sTemp))
					Call (rTemp) iSubmenu iOption aTemp
				endif
			elseif eval iTemp == 1
				Call (CompileScript (sTemp)) iSubmenu iOption aTemp
			elseif eval iTemp == 2
				DispatchEventAlt (sTemp) iSubmenu iOption aTemp
			elseif eval iTemp == 3
				RunScriptSnippet 0 (sTemp)
			elseif eval iTemp == 4
				Console (sTemp)
			endif
		elseif eval GetUIFloat "StartMenu/MCM/_ShowScale" == 0
			Goo1.AuxVarErase "*MCMExt_callLoop"
		endif

	endif

	; Run scale menu callClose
	if eval Goo1.AuxVarType "*MCMExt_callClose" 0 == 1 && GetUIFloat "StartMenu/MCM/_ShowScale" == 0

		iSubmenu = GetUIFloat "StartMenu/MCM/_ActiveSubMenu"
		iOption = GetUIFloat "StartMenu/MCM/_ActiveOption"

		iTemp = GetUIFloat "StartMenu/MCM/*:2/_scales"
		aTemp = ar_Construct "array"
		ar_Append aTemp MCMScale.fVTemp1
		if eval iTemp > 1
			ar_Append aTemp MCMScale.fVTemp2
		endif
		if eval iTemp > 2
			ar_Append aTemp MCMScale.fVTemp3
		endif

		iTemp = Goo1.AuxVarGetFlt "*MCMExt_callClose" 0
		sTemp = Goo1.AuxVarGetStr "*MCMExt_callClose" 1
		if eval iTemp == 0
			if TestExpr (rTemp = EditorIDToFormID (sTemp))
				Call (rTemp) iSubmenu iOption aTemp
			endif
		elseif eval iTemp == 1
			Call (CompileScript (sTemp)) iSubmenu iOption aTemp
		elseif eval iTemp == 2
			DispatchEventAlt (sTemp) iSubmenu iOption aTemp
		elseif eval iTemp == 3
			RunScriptSnippet 0 (sTemp)
		elseif eval iTemp == 4
			Console (sTemp)
		endif

		Goo1.AuxVarErase "*MCMExt_callClose"

	endif

	aJSON = aTemp = Ar_Null
	sv_Destruct sTemp sTranslate sJSONPath

End