int iSubmenu
int iOption
int iSize
ref rTemp
array_var aJSON
array_var aOption
array_var aVariables
array_var aForE
array_var aFunction
string_var sText
string_var sTranslate
string_var sType

Begin Function {}

	SetUIFloat "StartMenu/MCM/_ShowScale" 2

	; Exit search on select key option
	if eval GetUIFloatAlt "StartMenu\_MCMExt+Search" == 1
		SetUIFloatAlt "StartMenu\_MCMExt+Search" 2
	endif

	iSubmenu = GetUIFloat "StartMenu/MCM/_ActiveSubMenu"
	iOption = GetUIFloat "StartMenu/MCM/_ActiveOption"
	aJSON = ReadFromJSON (Goo1.AuxVarGetStr "*MCMExt_State" 3) "" 0 1
	aOption = aJSON["submenus"][$iSubmenu]["options"][$iOption]
	aVariables = aOption["vars"]

	; Translation
	if eval (TypeOf aOption["title"]) == "StringMap"
		sText = Call (CompileScript "MCMExtender\GetString.gek") (aOption["title"])
	else
		sText = aOption["title"]
	endif
	if eval sText[0] == "$" && (sTranslate = AuxStringMapGetStr "*MCMExt_Translations" (sText)) != ""
		sText = sTranslate
	endif
	SetUIString "StartMenu/MCM/*:2/_title" (sText)

	; Set other scale parameters
	if eval Ar_HasKey aOption "scale"
		foreach aForE <- aOption["scale"]
			sType = (TypeOf aForE["value"])
			if eval sType == "Number"
				SetUIFloat ("StartMenu/MCM/_" + $aForE["key"]) (aForE["value"])
			elseif eval sType == "String" || sType == "StringMap"
				; Translation
				if eval sType == "StringMap"
					sText = Call (CompileScript "MCMExtender\GetString.gek") (aForE["value"])
				else
					sText = aForE["value"]
				endif
				if eval sText[0] == "$" && (sTranslate = AuxStringMapGetStr "*MCMExt_Translations" (sText)) != ""
					sText = sTranslate
				endif
				if eval aForE["key"] == "suffix"
					SetUIString "StartMenu/MCM/*:2/_suffixText" (sText)
				else
					SetUIString ("StartMenu/MCM/*:2/_" + $aForE["key"]) (sText)
				endif
			endif
		loop
	endif

	; Update starting values
	SetUIFloat "StartMenu/MCM/*:2/_scales" (iSize = Ar_Size aVariables)
	while (iSize -= 1) > -1
		sText = ""
		if eval (Ar_Size aVariables) != 1
			sText += $(iSize + 1)
		endif
		SetUIFloat ("StartMenu/MCM/_Value" + (sText)) (Clamp (Call (CompileScript "MCMExtender\GetValue.gek") (aVariables[iSize])) (GetUIFloat ("StartMenu/MCM/_value" + (sText) + "Min")) (GetUIFloat ("StartMenu/MCM/_value" + (sText) + "Max")))
	loop

	; Run callOpen script
	if eval Ar_HasKey aOption "callOpen"

		iSize = GetUIFloat "StartMenu/MCM/*:2/_scales"
		aVariables = ar_Construct "array"
		if eval iSize == 1
			ar_Append aVariables (GetUIFloat "StartMenu/MCM/_Value")
		else
			ar_Append aVariables (GetUIFloat "StartMenu/MCM/_Value1")
			if eval iSize > 1
				ar_Append aVariables (GetUIFloat "StartMenu/MCM/_Value2")
			endif
			if eval iSize > 2
				ar_Append aVariables (GetUIFloat "StartMenu/MCM/_Value3")
			endif
		endif

		aFunction = aOption["callOpen"]
		sText = aFunction["value"]
		if eval (aFunction["type"]) == "udf"
			if TestExpr (rTemp = EditorIDToFormID (sText))
				Call (rTemp) iSubmenu iOption aVariables
			endif
		elseif eval (aFunction["type"]) == "file"
			Call (CompileScript (sText)) iSubmenu iOption aVariables
		elseif eval (aFunction["type"]) == "event"
			DispatchEventAlt (sText) iSubmenu iOption aVariables
		elseif eval (aFunction["type"]) == "snippet"
			RunScriptSnippet 0 (sText)
		elseif eval (aFunction["type"]) == "console"
			Console (sText)
		endif

	endif

	; Update callLoop script
	if eval Ar_HasKey aOption "callLoop"
		aFunction = aOption["callLoop"]
		if eval (aFunction["type"]) == "udf"
			iOption = 0
		elseif eval (aFunction["type"]) == "file"
			iOption = 1
		elseif eval (aFunction["type"]) == "event"
			iOption = 2
		elseif eval (aFunction["type"]) == "snippet"
			iOption = 3
		elseif eval (aFunction["type"]) == "console"
			iOption = 4
		endif
		Goo1.AuxVarSetFlt "*MCMExt_callLoop" iOption 0
		Goo1.AuxVarSetStr "*MCMExt_callLoop" (aFunction["value"]) 1
	endif

	; Update callClose script
	if eval Ar_HasKey aOption "callClose"
		aFunction = aOption["callClose"]
		if eval (aFunction["type"]) == "udf"
			iOption = 0
		elseif eval (aFunction["type"]) == "file"
			iOption = 1
		elseif eval (aFunction["type"]) == "event"
			iOption = 2
		elseif eval (aFunction["type"]) == "snippet"
			iOption = 3
		elseif eval (aFunction["type"]) == "console"
			iOption = 4
		endif
		Goo1.AuxVarSetFlt "*MCMExt_callClose" iOption 0
		Goo1.AuxVarSetStr "*MCMExt_callClose" (aFunction["value"]) 1
	endif

	aJSON = aOption = aVariables = aForE = aFunction = Ar_Null
	sv_Destruct sText sTranslate sType

	; HSV Color Picker
	if eval (GetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/visible") == 0
		return
	endif
	; Set input traits
	SetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/_InputRed" (Clamp (GetUIFloat "StartMenu/MCM/_Value1") 0 255)
	SetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/_InputGreen" (Clamp (GetUIFloat "StartMenu/MCM/_Value2") 0 255)
	SetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/_InputBlue" (Clamp (GetUIFloat "StartMenu/MCM/_Value3") 0 255)
	; Set picker drag coordinates
	SetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/SV_Picker/dragoffsetx" 0
	SetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/SV_Picker/dragoffsety" 0
	SetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/Hue_Picker/dragoffsetx" 0
	SetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/Hue_Picker/dragoffsety" 0
	SetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/SV_Picker/dragx" (GetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/_OutputSVDragX")
	SetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/SV_Picker/dragy" (GetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/_OutputSVDragY")
	SetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/Hue_Picker/dragy" (GetUIFloatAlt "StartMenu/MCM/MCM_Scale/HSVColorPicker/_OutputHueDragY")

End